{{ if .Values.ciliumNetworkPolicy.enabled }}
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "trivy-operator.networkPolicy" . }}
  labels:
     {{- include "trivy-operator-helpers.labels" . | nindent 4 }}
  annotations:
    ignore-check.kube-linter.io/dangling-networkpolicy: "The podselector value, app.kubernetes.io/managed-by:trivy-operator is inherited from parent repository."
spec:
  endpointSelector:
    matchLabels:
       {{- include "labels.selector" . | nindent 6 }}
  egress:
    # Allow egress to Kubernetes API server.
    - toEntities:
        - kube-apiserver
    # Allow DNS.
    - toEntities:
        - cluster
      toPorts:
        - ports:
  ingress:
    - fromEntities:
      - cluster
      toPorts:
      - ports:
        - port: "8080"
---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "trivy-operator.networkPolicy" . }}-scanner-job
  labels:
    {{- include "trivy-operator-helpers.labels" . | nindent 4 }}
  annotations:
    ignore-check.kube-linter.io/dangling-networkpolicy: "The podselector value, app.kubernetes.io/managed-by:trivy-operator is inherited from parent repository."
spec:
  endpointSelector:
    matchExpressions:
    - key: trivy-operator.resource.kind
      operator: Exists
    - key: trivy-operator.resource.name
      operator: Exists
    - key: vulnerabilityReport.scanner
      operator: In
      values:
      - Trivy
  egress:
    # Allow egress to the internet to fetch database updates and trivy-checks OCI.
    - toFQDNs:
      - matchName: "gsoci.azurecr.io"
      - matchPattern: "*.blob.core.windows.net"
      {{- if .Values.ciliumNetworkPolicy.scanJobExtraEgress.fqdnsConnection.rules -}}
      # Allow additional FQDNs rules
        {{- with .Values.ciliumNetworkPolicy.scanJobExtraEgress.fqdnsConnection.rules -}}
        {{ toYaml .| nindent 6 }}
        {{- end }}
      {{- end }}
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
    # Allow Trivy service connection.
    - toEntities:
        - cluster
      toPorts:
        - ports:
            - port: "{{ .Values.trivyServicePort | default 4954 }}"
    # Allow DNS for FQDN resolution
    - toEndpoints:
      - matchLabels:
          "k8s:io.kubernetes.pod.namespace": kube-system
          "k8s:k8s-app": coredns
      - matchLabels:
          "k8s:io.kubernetes.pod.namespace": kube-system
          "k8s:k8s-app": k8s-dns-node-cache
      toPorts:
      - ports:
          - port: "1053"
            protocol: ANY
          - port: "53"
            protocol: ANY
        rules:
          dns:
          - matchName: "gsoci.azurecr.io"
          - matchPattern: "*.blob.core.windows.net"
          {{- if .Values.ciliumNetworkPolicy.scanJobExtraEgress.dnsSelector.rules -}}
          # Allow additional DNS rules
            {{- with .Values.ciliumNetworkPolicy.scanJobExtraEgress.dnsSelector.rules -}}
            {{ toYaml . | nindent 10 }}
            {{- end }}
          {{- end }}
---
apiVersion: "cilium.io/v2"
kind: CiliumNetworkPolicy
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "trivy-operator.networkPolicy" . }}-node-collector-job
  labels:
    {{- include "trivy-operator-helpers.labels" . | nindent 4 }}
spec:
  endpointSelector:
    matchLabels:
      app: node-collector
  egress:
    - toEntities:
        - kube-apiserver
      toPorts:
        - ports:
            - port: "443"
            - port: "6443"
{{ end }}
